{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/forms\";\nexport let LoginModuleComponent = /*#__PURE__*/(() => {\n  class LoginModuleComponent {\n    constructor(userService, authService, router, route, snack) {\n      this.userService = userService;\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n      this.snack = snack;\n      this.user = {\n        'userid': \" \",\n        'upassword': \" \",\n        'uname': \"admin\"\n      }; //authResponse : any;\n\n      this.authResponse = {\n        'userid': \"\",\n        'name': \"\",\n        'valid': false\n      };\n    }\n\n    ngOnInit() {}\n\n    onLogin(custForm) {\n      console.log(custForm.value.userid);\n      console.log(custForm.value.password);\n      this.user.userid = custForm.value.userid;\n      this.user.upassword = custForm.value.password;\n      this.user.uname = \"admin1\";\n      this.userService.loginMember(this.user).subscribe(data => {\n        this.errMsg = '';\n        console.log(data);\n        this.userDtls = data;\n        localStorage.setItem(\"userId\", this.userDtls.userid);\n        localStorage.setItem(\"token\", this.userDtls.authToken);\n        console.log(this.userDtls.authToken);\n        let response = this.userService.validateToken(this.userDtls.authToken);\n        response.subscribe(data1 => {\n          this.snack.dismiss();\n          console.log(data1);\n          this.authResponse = data1;\n          console.log(this.authResponse.name, this.authResponse.valid);\n\n          if (this.authResponse.valid) {\n            console.log(\"true valid\");\n            this.authService.login();\n          } else {\n            console.log(\"false valid\");\n            this.authService.logout();\n          }\n\n          if (this.authService.isLoggedIn()) {\n            localStorage.setItem('userId', this.authResponse.userid);\n            this.router.navigate(['home']);\n          }\n        }); //localStorage.getItem(\"token\");\n      }, error => {\n        this.errMsg = \"Invalid Credentials!\";\n        this.snack.open(this.errMsg, \"X\", {\n          duration: 3000,\n          panelClass: [\"custom-style\"]\n        });\n      });\n      custForm.reset();\n    }\n\n  }\n\n  LoginModuleComponent.ɵfac = function LoginModuleComponent_Factory(t) {\n    return new (t || LoginModuleComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n\n  LoginModuleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginModuleComponent,\n    selectors: [[\"app-login-module\"]],\n    decls: 24,\n    vars: 0,\n    consts: [[1, \"container\"], [\"ngNativeValidate\", \"\", 3, \"ngSubmit\"], [\"custForm\", \"ngForm\"], [2, \"text-align\", \"center\", \"color\", \"black\"], [1, \"form-group\", \"row\", \"UserName\"], [1, \"col-sm-3\"], [\"for\", \"userid\", 1, \"col-form-label\"], [1, \"col-sm-9\"], [\"name\", \"userid\", \"type\", \"text\", \"id\", \"userid\", \"placeholder\", \"User Id\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"row\", \"Password\"], [\"for\", \"password\", 1, \"col-form-label\"], [\"name\", \"password\", \"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", \"ngModel\", \"\", \"required\", \"\", \"pattern\", \"[a-zA-z1-9]{3,10}\", 1, \"form-control\"], [1, \"text-center\", \"row\"], [1, \"col-sm-6\", \"text-right\"], [\"name\", \"submit\", \"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n    template: function LoginModuleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginModuleComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(2);\n\n          return ctx.onLogin(_r0);\n        });\n        i0.ɵɵelementStart(3, \"h2\", 3);\n        i0.ɵɵtext(4, \"LOGIN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"User ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵelementStart(14, \"div\", 5);\n        i0.ɵɵelementStart(15, \"label\", 10);\n        i0.ɵɵtext(16, \" Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 7);\n        i0.ɵɵelement(18, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 12);\n        i0.ɵɵelementStart(20, \"div\", 13);\n        i0.ɵɵelementStart(21, \"button\", 14);\n        i0.ɵɵtext(22, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i5.RequiredValidator, i5.PatternValidator],\n    styles: [\"body[_ngcontent-%COMP%]{color:#000;overflow-x:hidden;height:100%;background-color:#b0bec5;background-repeat:no-repeat}form[_ngcontent-%COMP%]{margin:100px 300px 150px;text-align:center;position:relative;border-radius:20px;padding:40px;box-sizing:border-box;background:#ecf0f3;box-shadow:14px 14px 20px #a2a7ac,-14px -14px;width:50%}.card0[_ngcontent-%COMP%]{box-shadow:0 4px 8px 0 #757575;border-radius:0}.card2[_ngcontent-%COMP%]{margin:0 40px}.logo[_ngcontent-%COMP%]{width:200px;height:100px;margin-top:20px;margin-left:35px}.login1[_ngcontent-%COMP%]{font-size:large;color:#1a237e}  .custom-style{background-color:brown;color:#fff;position:absolute;bottom:13%;right:36%}.image[_ngcontent-%COMP%]{width:450px;height:320px}.btn[_ngcontent-%COMP%]{margin-top:20px;margin-left:100%;width:100px}.heading[_ngcontent-%COMP%]{text-align:center;margin-top:10px;font-size:50px;overflow:auto;font-family:Staatliches,cursive;color:#1a237e}label[_ngcontent-%COMP%]{color:#000;font-weight:bolder}.border-line[_ngcontent-%COMP%]{border-right:1px solid #eee}.line[_ngcontent-%COMP%]{height:1px;width:45%;background-color:#e0e0e0;margin-top:10px}.or[_ngcontent-%COMP%]{width:10%;font-weight:700}.text-sm[_ngcontent-%COMP%]{font-size:14px!important}[_ngcontent-%COMP%]::-moz-placeholder{color:#bdbdbd;opacity:1;font-weight:300}[_ngcontent-%COMP%]:-ms-input-placeholder{opacity:1}[_ngcontent-%COMP%]::placeholder{color:#bdbdbd;opacity:1;font-weight:300}[_ngcontent-%COMP%]:-ms-input-placeholder{color:#bdbdbd;font-weight:300}[_ngcontent-%COMP%]::-ms-input-placeholder{color:#bdbdbd;font-weight:300}input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{padding:10px 12px;border:1px solid #000;border-radius:2px;margin-bottom:20px;margin-top:2px;width:100%;box-sizing:border-box;color:#2c3e50;font-size:14px;letter-spacing:1px}input[_ngcontent-%COMP%]:focus, textarea[_ngcontent-%COMP%]:focus{border:1px solid #304ffe}button[_ngcontent-%COMP%]:focus, input[_ngcontent-%COMP%]:focus, textarea[_ngcontent-%COMP%]:focus{box-shadow:none!important;outline-width:0}a[_ngcontent-%COMP%]{color:inherit;cursor:pointer}.btn-blue[_ngcontent-%COMP%]{background-color:#1a237e;width:150px;color:#fff;border-radius:2px}.btn-blue[_ngcontent-%COMP%]:hover{background-color:#000;cursor:pointer}.bg-blue[_ngcontent-%COMP%]{color:#fff;background-color:#1a237e}@media screen and (max-width: 991px){.logo[_ngcontent-%COMP%]{margin-left:0}.image[_ngcontent-%COMP%]{width:300px;height:220px}.border-line[_ngcontent-%COMP%]{border-right:none}.card2[_ngcontent-%COMP%]{border-top:1px solid #eee!important;margin:0 15px}}.hotkey[_ngcontent-%COMP%]{color:#fff;background-color:#fff}p[_ngcontent-%COMP%]{color:red;text-align:center}button[_ngcontent-%COMP%]{margin-left:420px}\"]\n  });\n  return LoginModuleComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}