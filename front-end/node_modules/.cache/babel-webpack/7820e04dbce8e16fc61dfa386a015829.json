{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../refill-status.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction RefillComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const city_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", city_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r1);\n  }\n}\n\nexport let RefillComponent = /*#__PURE__*/(() => {\n  class RefillComponent {\n    constructor(rservice, route, aroute, authService, snack) {\n      // if(!this.authService.isLoggedIn()){\n      //   this.route.navigate([\"\"]);\n      // }\n      this.rservice = rservice;\n      this.route = route;\n      this.aroute = aroute;\n      this.authService = authService;\n      this.snack = snack; //refill:Refill = new Refill(0,'',\"\",\"\",0)\n\n      this.refill = {\n        'policyID': 2,\n        'subID': localStorage.getItem('subID'),\n        'memberID': 'admin',\n        'location': '',\n        'quantity': 0\n      };\n      this.tab = false;\n      this.errorMsg = '';\n      this.sid = '';\n      this.cities = ['Bangalore', 'Chennai', 'Hyderabad', 'Pune'];\n    }\n\n    ngOnInit() {}\n\n    saveOrder() {\n      console.log(localStorage.getItem('subID') + '*********************');\n      this.rservice.saveRefill(this.refill).subscribe(data => {\n        this.tab = true;\n        console.log(this.refill.subID + 'in .ts');\n        this.msg = \"Refill request submitted\";\n        this.snack.open(this.msg, \"Cancle\", {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: [\"sub-style\"]\n        });\n      }, error => {\n        this.msg = \"Drug Quantity Not Available\";\n        console.log('inside error');\n        this.snack.open(this.msg, \"Cancle\", {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: [\"sub-style1\"]\n        });\n        this.tab = false;\n        this.errorMsg = \"No Refill requests found\";\n      }); //this.route.navigate(['/refillStatus'])\n    }\n\n    handleSubmit() {\n      console.log(this.refill);\n      this.saveOrder();\n    }\n\n  }\n\n  RefillComponent.ɵfac = function RefillComponent_Factory(t) {\n    return new (t || RefillComponent)(i0.ɵɵdirectiveInject(i1.RefillStatusService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n\n  RefillComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RefillComponent,\n    selectors: [[\"app-refill\"]],\n    decls: 19,\n    vars: 3,\n    consts: [[\"ngNativeValidate\", \"\", 3, \"ngSubmit\"], [1, \"form-group\", \"form\"], [\"type\", \"number\", \"placeholder\", \"Enter Quantity\", \"name\", \"quantity\", \"min\", \"1\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"location\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"align\", \"right\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [3, \"value\"]],\n    template: function RefillComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"br\");\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \"Adhoc Refill\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RefillComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 1);\n        i0.ɵɵelementStart(5, \"label\");\n        i0.ɵɵtext(6, \"Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function RefillComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.refill.quantity = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"label\");\n        i0.ɵɵtext(10, \"Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function RefillComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.refill.location = $event;\n        });\n        i0.ɵɵelementStart(12, \"option\", 4);\n        i0.ɵɵtext(13, \"--Select City--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, RefillComponent_option_14_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"p\", 6);\n        i0.ɵɵelementStart(17, \"button\", 7);\n        i0.ɵɵtext(18, \"Request\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.refill.quantity);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.refill.location);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n      }\n    },\n    directives: [i5.NgControlStatusGroup, i5.NgForm, i5.MinValidator, i5.NumberValueAccessor, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i5.SelectControlValueAccessor, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i6.NgForOf],\n    styles: [\"h2[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{text-align:center;color:#000}.form[_ngcontent-%COMP%]{margin-top:40px;margin-right:300px;margin-left:300px;color:#000}  .sub-style{background-color:green;color:#fff;margin-top:470px!important}  .sub-style1{background-color:brown;color:#fff;margin-top:470px!important}label[_ngcontent-%COMP%]{margin-top:20px;margin-bottom:10px}.message[_ngcontent-%COMP%]{color:green}\"]\n  });\n  return RefillComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}